# Lighttpd Server Configs | MIT License
# https://github.com/h5bp/server-configs-lighttpd
# http://redmine.lighttpd.net/projects/lighttpd/wiki
# lighttpd -t -f lighttpd.conf   # check configuration 
# lighttpd -D -f lighttpd.conf   # start lighttpd 
# systemctl lighttpd stop start
# systemctl lighttpd enable  

# variables
# var.host = "acer.local" 

# Run as an unprivileged user
server.username             = "www-data"
server.groupname            = "www-data"
server.pid-file             = "/var/run/lighttpd.pid"

# A static document-root. For virtual hosting see mod_simple_vhost module.
server.document-root        = "/var/www/public_html/" 
server.port                 = 80
server.bind                 = "0.0.0.0"

# logs
server.errorlog             = "/var/log/lighttpd/error.log"
# accesslog.filename        = "/var/log/lighttpd/access.log"

# Avoid revealing the server name and version number
server.tag = "robuntu"

# Disable directory listing = enable/disable
dir-listing.encoding        = "utf-8"
server.dir-listing          = "enable"

 # disable directory-listings for /download/*
$HTTP["url"] =~ "^/download/" {
    dir-listing.activate = "disable" 
 }

index-file.names            = ( "index.html", "index.htm",)

# Extensions that should not be handle via static-file transfer.
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

# Block access to backup and source files.
url.access-deny = ( "~", ".inc" )

# Modules to load
# at least mod_access and mod_accesslog should be loaded
# mod_expire should go above mod_compress (and mod_fcgi if you use it)
server.modules  = ( 
	    "mod_access",
	#    "mod_accesslog", 
	#    "mod_redirect",
	    "mod_rewrite",
	    "mod_alias",
	#    "mod_auth",
	#    "mod_status",
	#    "mod_simple_vhost",
	#    "mod_evhost",
	#    "mod_userdir",
	#    "mod_secdownload",
	#    "mod_proxy",
	#    "mod_cgi",
	#    "mod_ssi",
	#    "mod_expire",
	#    "mod_compress",
    #    "mod_fastcgi",
    #    "mod_usertrack",
    #    "mod_rrdtool"
)


# Sent Response Headers
# setenv.add-response-header = ( "X-UA-Compatible" => "IE=edge" )

# Make sure folder exists and is writable to server.username
server.upload-dirs = ( "/var/www/uploads" )
compress.cache-dir = "/var/cache/lighttpd/compress/"
compress.filetype = ( "application/x-javascript", "text/css", "text/html", "text/plain" )


# Set the event-handler (read the performance section in the manual)
# server.event-handler = "freebsd-kqueue" # needed on OS X

include "mime.types.conf"


# Expires headers (for better cache control)
# The following expires headers are set pretty far in the future. If you don't
# control versioning with filename-based cache busting, consider lowering the
# cache time for resources like CSS and JS to something like 1 week.

# CSS - seconds, days, week, months, years
# $HTTP["url"] =~ ".css" {
#      expire.url = ( "" => "access plus 1 years" )
# }

# Data interchange
# $HTTP["url"] =~ ".(json|xml)" {
#     expire.url = ( "" => "access plus 0 seconds" )
# }

# Favicon
# $HTTP["url"] =~ ".ico" {
#     expire.url = ( "" => "access plus 7 days" )
# }

# HTML components (HTCs)
# $HTTP["url"] =~ ".htc" {
#     expire.url = ( "" => "access plus 1 months" )
# }

# HTML
# $HTTP["url"] =~ ".html" {
#     expire.url = ( "" => "access plus 0 seconds" )
# }

# JavaScript
# $HTTP["url"] =~ ".js" {
#     expire.url = ( "" => "access plus 1 years" )
# }

# Manifest files
# $HTTP["url"] =~ ".(appcache|manifest|webapp)" {
#     expire.url = ( "" => "access plus 0 seconds" )
# }

# $HTTP["url"] =~ ".webmanifest" {
#     expire.url = ( "" => "access plus 1 week" )
# }

# Media
# $HTTP["url"] =~ ".(gif|jpg|jpeg|png|m4a|f4a|f4b|oga|ogg|webm)" {
#     expire.url = ( "" => "access plus 1 months" )
# }

# Web feeds
# $HTTP["url"] =~ ".(atom|rss)" {
#     expire.url = ( "" => "access plus 1 hours" )
# }

# Web fonts
# $HTTP["url"] =~ ".(eot|otf|svg|svgz|ttf|ttc|woff)" {
#     expire.url = ( "" => "access plus 1 months" )
# }

# Default
# expire.url = ( "" => "access plus 1 months" )
# ===================================



# default listening port for IPv6 falls back to the IPv4 port
include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
# include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"



$HTTP["host"] =~ "acer\.local" {
   server.document-root = "/var/www/public_html"
   server.error-handler-404 = "/e404.html"
 }

$HTTP["host"] =~ "ui\.local" {
   server.document-root = "/var/www/ui.local/public"
   server.error-handler-404 = "/e404.html"
}

$HTTP["host"] =~ "resources\.local" {
   server.document-root = "/var/www/resources.local"
   server.error-handler-404 = "/e404.html"
 }
   

